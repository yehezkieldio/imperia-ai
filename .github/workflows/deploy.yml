name: Azure Container Deployment

on:
  push:
    branches:
      - stable

jobs:
  deploy:
    name: Build & Deploy on Merge to Stable
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: discord-bot
      CONTAINER_NAME: discord-bot
      RESOURCE_GROUP: discord-bots-rg
      LOCATION: eastasia
      REGISTRY: docker.io

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: image=moby/buildkit:buildx-stable-1

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Delete old container instance (if exists)
        continue-on-error: true
        run: |
          az container delete \
            --resource-group $RESOURCE_GROUP \
            --name $CONTAINER_NAME \
            --yes

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - name: Deploy container to Azure
        run: |
          az container create \
            --resource-group $RESOURCE_GROUP \
            --name $CONTAINER_NAME \
            --image ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:${{ github.sha }} \
            --os-type Linux \
            --cpu 1 \
            --memory 1.5 \
            --restart-policy Always \
            --environment-variables \
              DISCORD_BOT_TOKEN=${{ secrets.DISCORD_BOT_TOKEN }} \
              NODE_ENV=production \
              GROQ_API_KEY=${{ secrets.GROQ_API_KEY }} \
              GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }} \
              MISTRAL_API_KEY=${{ secrets.MISTRAL_API_KEY }} \
              HYPERBOLIC_API_KEY=${{ secrets.HYPERBOLIC_API_KEY }} \
              TOGETHER_API_KEY=${{ secrets.TOGETHER_API_KEY }} \
            --location $LOCATION
